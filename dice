#!/usr/bin/env node

var cmd = require("commander"),
	
	parseComponent = function(component){
		var result = 0, parsed;
		if(component.indexOf("d") !== -1){
			var tokens = component.split("d"),
				rolls = parseInt(tokens[0]),
				sides = parseInt(tokens[1]),
				rollList = [];

			if(!rolls){
				rolls = 1;
			}
			if(!sides
			|| tokens.length > 2){
				console.log("Error: Unparsable token: \"" + component + "\"");
				return 0;
			}

			for(var i = 0; i < rolls; i += 1){
				rollList.push(rollDie(sides));
			}
			if(cmd.top && parseInt(cmd.top)){
				rollList.sort(function(a, b){
					if(a < b) return -1;
					if(a > b) return 1;
					return 0;
				});
				rollList = rollList.slice(rollList.length - parseInt(cmd.top), rollList.length);
			}
			result += rollList.reduce(function(a, b){return a + b;});
		}else{
			parsed = parseInt(component);
			if(parsed === NaN){
				console.log("Error: Unparsable token: \"" + component + "\"");
				return 0;
			}
			result += parsed;
			console.log("Modifier: " + result.toString());
		}
		return result;
	},

	rollDie = function(sides){
		var roll = Math.floor(Math.random() * (sides - 1) + 1);
		console.log("d" + sides.toString() + ": " + roll.toString());
		return roll;
	},

	invalidCommandAction = function(){
		console.log("You must use a valid command.\n\nUse -h for more info.");
	};

cmd
	.version("0.1.0")
	.option("-t, --top [rolls]", "Only totals the highest n rolls in each component.");

cmd
	.command("roll <roll>")
	.description("Rolls the specified dice with the given modifiers. (e.g. 1d6+2d12+5)")
	.action(function(roll){
		var components = roll.split("+"), result = 0;
		for(var i = 0; i < components.length; i += 1){
			result += parseComponent(components[i]);
		}
		console.log("Result: " + result.toString());
	});

cmd
	.command("*")
	.action(invalidCommandAction);

cmd.parse(process.argv);

if(process.argv[process.argv.length - 1].indexOf("rcon") !== -1){
	invalidCommandAction();
}
